/*
 * SoundCloud Public API Specification
 *
 * Swagger json can be found [here](https://developers.soundcloud.com/docs/api/explorer/api.json)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Comment : User's Comment
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Comment {
    /// Comment body.
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    /// Created timestamp.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Identifier.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Kind (comment).
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// User's identifier.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i32>,
    /// Timestamp.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    /// Track's identifier.
    #[serde(rename = "track_id", skip_serializing_if = "Option::is_none")]
    pub track_id: Option<i32>,
    /// Comment's URL.
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<models::CommentUser>>,
}

impl Comment {
    /// User's Comment
    pub fn new() -> Comment {
        Comment {
            body: None,
            created_at: None,
            id: None,
            kind: None,
            user_id: None,
            timestamp: None,
            track_id: None,
            uri: None,
            user: None,
        }
    }
}

