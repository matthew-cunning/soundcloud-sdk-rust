/*
 * SoundCloud Public API Specification
 *
 * Swagger json can be found [here](https://developers.soundcloud.com/docs/api/explorer/api.json)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CommentUser : SoundCloud User object
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CommentUser {
    /// unique identifier
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// kind of resource.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// permalink of the resource.
    #[serde(rename = "permalink", skip_serializing_if = "Option::is_none")]
    pub permalink: Option<String>,
    /// username
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// last modified timestamp.
    #[serde(rename = "last_modified", skip_serializing_if = "Option::is_none")]
    pub last_modified: Option<String>,
    /// API resource URL.
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
    /// URL to the SoundCloud.com page.
    #[serde(rename = "permalink_url", skip_serializing_if = "Option::is_none")]
    pub permalink_url: Option<String>,
    /// URL to a JPEG image.
    #[serde(rename = "avatar_url", skip_serializing_if = "Option::is_none")]
    pub avatar_url: Option<String>,
    /// number of followers.
    #[serde(rename = "followers_count", skip_serializing_if = "Option::is_none")]
    pub followers_count: Option<i32>,
    /// number of followed users.
    #[serde(rename = "followings_count", skip_serializing_if = "Option::is_none")]
    pub followings_count: Option<i32>,
    /// number of reposts from user
    #[serde(rename = "reposts_count", skip_serializing_if = "Option::is_none")]
    pub reposts_count: Option<i32>,
}

impl CommentUser {
    /// SoundCloud User object
    pub fn new() -> CommentUser {
        CommentUser {
            id: None,
            kind: None,
            permalink: None,
            username: None,
            last_modified: None,
            uri: None,
            permalink_url: None,
            avatar_url: None,
            followers_count: None,
            followings_count: None,
            reposts_count: None,
        }
    }
}

